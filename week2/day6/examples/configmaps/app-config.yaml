apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: ecommerce
  labels:
    app: ecommerce
    component: config
data:
  # 애플리케이션 기본 설정
  APP_ENV: "production"
  DEBUG_MODE: "false"
  LOG_LEVEL: "info"
  
  # API Gateway 설정
  API_GATEWAY_PORT: "8080"
  API_TIMEOUT: "30s"
  RATE_LIMIT: "1000"
  
  # 서비스 Discovery 설정
  USER_SERVICE_URL: "http://user-service:8081"
  PRODUCT_SERVICE_URL: "http://product-service:8082"
  PAYMENT_SERVICE_URL: "http://payment-service:8083"
  
  # 캐싱 설정
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  CACHE_TTL: "3600"
  
  # 데이터베이스 설정 (민감하지 않은 정보)
  DB_HOST: "mongodb-service"
  DB_PORT: "27017"
  DB_NAME: "ecommerce"
  
  # 프론트엔드 설정
  FRONTEND_PORT: "80"
  API_BASE_URL: "http://api-gateway:8080"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ecommerce
  labels:
    app: frontend
    component: config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream api_backend {
            server api-gateway:8080;
        }
        
        server {
            listen 80;
            server_name localhost;
            
            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
                try_files $uri $uri/ /index.html;
            }
            
            location /api/ {
                proxy_pass http://api_backend/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Health check bypass
                proxy_connect_timeout 5s;
                proxy_send_timeout 5s;
                proxy_read_timeout 5s;
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
    
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
  namespace: ecommerce
  labels:
    app: database
    component: config
data:
  # MongoDB 설정
  MONGO_INITDB_DATABASE: "ecommerce"
  
  # Redis 설정
  REDIS_MAXMEMORY: "256mb"
  REDIS_MAXMEMORY_POLICY: "allkeys-lru"
  
  # 연결 풀 설정
  DB_POOL_MIN: "5"
  DB_POOL_MAX: "20"
  DB_CONNECTION_TIMEOUT: "10000"
  
  # 백업 설정
  BACKUP_SCHEDULE: "0 2 * * *"
  BACKUP_RETENTION: "7"