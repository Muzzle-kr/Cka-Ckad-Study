apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: default
type: Opaque
data:
  # Base64로 인코딩된 값들
  username: YWRtaW4=                    # admin
  password: c3VwZXItc2VjcmV0LXBhc3N3b3Jk  # super-secret-password
  api-key: YWJjMTIzeHl6Nzg5              # abc123xyz789
  database-url: cG9zdGdyZXNxbDovL2FkbWluOnN1cGVyLXNlY3JldC1wYXNzd29yZEBkYjo1NDMyL215YXBw  # postgresql://admin:super-secret-password@db:5432/myapp

---
# stringData 사용 (자동 Base64 인코딩)
apiVersion: v1
kind: Secret
metadata:
  name: app-secret-v2
  namespace: default
type: Opaque
stringData:
  username: admin
  password: super-secret-password
  api-key: abc123xyz789
  jwt-secret: my-jwt-secret-key-for-authentication
  redis-password: redis-password-123
  email-password: email-service-password

---
# Docker Registry Secret 예시
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJkb2NrZXIuaW8iOnsidXNlcm5hbWUiOiJteXVzZXJuYW1lIiwicGFzc3dvcmQiOiJteXBhc3N3b3JkIiwiZW1haWwiOiJteS5lbWFpbEBleGFtcGxlLmNvbSIsImF1dGgiOiJiWGwxYzJWeWJtRnRaVHB0ZVhCaGMzTjNiM0prIn19fQ==

---
# TLS Secret 예시 (인증서와 개인키)
apiVersion: v1
kind: Secret
metadata:
  name: my-tls-secret
  namespace: default
type: kubernetes.io/tls
data:
  # 실제 환경에서는 진짜 인증서를 사용하세요
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lKQU1ycUp4RnNqMHJqTUEwR0NTcUdTSWIzRFFFQkN3VUFNRVl4Q3pBSkJnTlYKQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpEUVRFUE1BMEdBMVVFQnN3R1JHVnVkbVZ5TVJrd0Z3WURWUVFEREJCaGNIQmZibUZ0WlRFeE1qTTBOalV3SEJjTk1qSXdNVE13TWpBeU5ETTVXAUIS0FQSUOw0tLS0tCUVOORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREFqMGsrNGNIWEFGOXoKM1BGTVpNOHJtZnFIWGdGZXlaNTNGRjJhbXJhV1BocUJWU2I0MnltSDQ4QmE4Wko1YlhYeUYzM2dnZVRGelBKOAoKLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
